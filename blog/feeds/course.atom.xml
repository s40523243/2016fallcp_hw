<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2016Fall CPA 課程網誌 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/course.atom.xml" rel="self"></link><id>./</id><updated>2017-01-09T14:30:00+08:00</updated><entry><title>2016fallcp期末考週</title><link href="./2016fallcpqi-mo-kao-zhou.html" rel="alternate"></link><published>2017-01-09T14:30:00+08:00</published><updated>2017-01-09T14:30:00+08:00</updated><author><name>40523243</name></author><id>tag:,2017-01-09:./2016fallcpqi-mo-kao-zhou.html</id><summary type="html">&lt;p&gt;心得or程式範例&lt;/p&gt;
&lt;p&gt;w17週心得與程式範例:
補假沒有課QQ&lt;/p&gt;
&lt;p&gt;W16週心得與程式範例:
print結果會展示在網頁主控台,&amp;lt;"con"&amp;gt;標定在document&lt;/p&gt;
&lt;p&gt;猜數字遊戲,當使用者未輸入預期的資料我們用try跟except,用random來限定你要的範圍if和else內寫的程式來判定,錯了給提示一直猜到對&lt;/p&gt;
&lt;p&gt;W15週心得與程式範例:
從 Leo Editor把 @edit @path @button 的用法到 pelican 轉 .md 檔案成為 blog 網誌 然後加入 Brython 程式導入與執行的方法&lt;/p&gt;
&lt;p&gt;@settings-&amp;gt;設定節點 @edit-&amp;gt;增新節點 @button-&amp;gt;按鈕 移動節點 ctrl + u (upper) 向上 ctrl+d 向下 ctrl+l 向左 ctrl+i 新增內容 ctrl+B是執行 crtl+r向右移動或是將現在變成點取的檔案上面的子節點&lt;/p&gt;
&lt;p&gt;看完影片覺得這是一個前所未接觸的東西,值得學習&lt;/p&gt;</summary><category term="Brython"></category></entry><entry><title>W16</title><link href="./w16.html" rel="alternate"></link><published>2016-12-26T14:30:00+08:00</published><updated>2016-12-26T14:30:00+08:00</updated><author><name>40523243</name></author><id>tag:,2016-12-26:./w16.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;script type="text/python3"&gt;
from browser import alert
import random

ans = random.randint(1, 100)

a_in = int(input("輸入整數:"))
guess = 1

while ans != a_in:
    if a_in &lt; ans:
        a_in = int(input("too small"))
    else:
        a_in = int(input("too big"))
    guess += 1

alert("答對 ,猜了" + (str(guess)) + "次")
&lt;/script&gt;</summary><category term="Brython"></category></entry><entry><title>W15</title><link href="./w15.html" rel="alternate"></link><published>2016-12-19T12:00:00+08:00</published><updated>2016-12-19T12:00:00+08:00</updated><author><name>s40523243</name></author><id>tag:,2016-12-19:./w15.html</id><summary type="html">&lt;p&gt;W15&lt;/p&gt;
&lt;h3&gt;cpa_w14-1 教學影片重點 : &lt;/h3&gt;

&lt;p&gt;&lt;br&gt;
&lt;h4&gt;&lt;strong&gt;Q: leo 檔案 &amp;amp; setting 節點用法?&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;A: 結合複製指令，選擇一個或多個物件同步進行相同指令。&lt;/h4&gt;
&lt;br&gt;
&lt;h4&gt;&lt;strong&gt;Q: 如何複製或搬運 leo 節點? 有哪些快捷鍵? &lt;/strong&gt;&lt;/h4&gt;
&lt;li&gt;Ctrl + i = 新增節點
&lt;li&gt;Ctrl + u = 節點上移
&lt;li&gt;Ctrl + d = 節點下移
&lt;li&gt;Ctrl + l = 節點左移
&lt;li&gt;Ctrl + r = 節點右移
&lt;br&gt;
&lt;h4&gt;&lt;strong&gt;Q: @path 節點指令用法&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;A: 可在節點指令後註記標題，表示節點的路徑關係。&lt;/h4&gt;
&lt;br&gt;
&lt;h4&gt;&lt;strong&gt;Q: @edit &amp;amp; @auto節點指令用法&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;A: 兩者皆為導入外部檔案"標題指令"，建立起Leo內部與外部檔案的關係。&lt;/h4&gt;
&lt;h4&gt;不同的地方在於 @edit 讀取內容不會自動分割節點，而 @auto 會自動分割節點。&lt;/h4&gt;
&lt;br&gt;
&lt;h4&gt;&lt;strong&gt;Q: @others 節點指令用法&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;A: 此節點下屬所有子節點的內容，當 @other 改變位置時，所對應的子節點也相應移位。&lt;/h4&gt;
&lt;br&gt;
&lt;h4&gt;&lt;strong&gt;＊可利用節點將雜亂的程式碼分割成數個子節點，針對各別修改需求尋找子節點。&lt;/strong&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;strong&gt;＊節點標題與程式碼內容互不影響。&lt;/strong&gt;&lt;/h4&gt;&lt;/p&gt;</summary><category term="Brython"></category></entry><entry><title>W13 Brython 繪圖範例</title><link href="./w13-brython-hui-tu-fan-li.html" rel="alternate"></link><published>2016-12-12T12:00:00+08:00</published><updated>2016-12-12T12:00:00+08:00</updated><author><name>s40523243</name></author><id>tag:,2016-12-12:./w13-brython-hui-tu-fan-li.html</id><summary type="html">&lt;p&gt;Brython 繪圖&lt;/p&gt;


&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def canvasText(x, y, fontSize, string, sup, sub, color, ctx):
    ctx.beginPath()
    ctx.fillStyle = color
    ctx.strokeStyle = color
    #ctx.font = "20px Arial"
    ctx.font = str(fontSize)+ "px Arial"
    ctx.fillText(string, x, y)
    ctx.font = str(fontSize-8)+ "px Arial"
    if sup != "":
        ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2)
    if sub != "":
        ctx.fillText(sup, x+fontSize/1.6, y)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()

# 設法利用運算印出吉他各把位的音名
def doreme(x, y, fontSize, order, ctx):
    # 讓音名數列可以每 12 音名後, 升高 key 後從頭開始
    if order &gt; 12:
        order = order % 12
    if order == 1:
        canvasText(x, y, fontSize, "A", "", "", "black", ctx)
    elif order ==2:
        canvasText(x, y, fontSize, "B", "b", "", "red", ctx)
    elif order == 3:
        canvasText(x, y, fontSize, "B", "", "", "black", ctx)
    elif order == 4:
        canvasText(x, y, fontSize, "C", "", "", "black", ctx)
    elif order == 5:
        canvasText(x, y, fontSize, "D", "b", "", "red", ctx)
    elif order == 6:
        canvasText(x, y, fontSize, "D", "", "", "black", ctx)
    elif order == 7:
        canvasText(x, y, fontSize, "E", "b", "", "red", ctx)
    elif order == 8:
        canvasText(x, y, fontSize, "E", "", "", "black", ctx)
    elif order == 9:
        canvasText(x, y, fontSize, "F", "", "", "black", ctx)
    elif order == 10:
        canvasText(x, y, fontSize, "G", "b", "", "red", ctx)
    elif order == 11:
        canvasText(x, y, fontSize, "G", "", "", "black", ctx)
    elif order == 12:
        canvasText(x, y, fontSize, "A", "b", "", "red", ctx)
    else:
        canvasText(x, y, fontSize, "A", "b", "", "red", ctx)

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()    
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)        
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()    
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)        
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 標定各弦音符號, 以及把位編號
    ctx.beginPath()
    ctx.fillStyle = 'black'
    ctx.strokeStyle = "black"
    ctx.font = "20px Arial"
    sixString = ["E", "A", "D", "G", "B", "E"]
    stringNum = 0
    for i in sixString:
        ctx.fillText(i, x-7+stringNum*xinc, y-15)
        stringNum = stringNum + 1
    num = 1
    for j in range(1,20,1):
        ctx.fillText(j,15,95+num*yinc)
        num = num + 1
    ctx.fill()
    ctx.stroke()
    ctx.closePath()

    firstBar = [8, 1, 6, 11, 3, 8]
    for j in range(19):
        fontSize = 15 
        for k in range(6):
            bx = x + (k)*w - fontSize/3
            by = y + (j)*h+h/2 + fontSize/2
            order = firstBar[k] + j + 1
            doreme(bx, by, fontSize, order, ctx)

w = 20
h = 25
background(50, 100, w, h, 5, 19, ctx)
&lt;/script&gt;

&lt;/pre&gt;</summary><category term="Brython"></category></entry><entry><title>W14 Brython 練習</title><link href="./w14-brython-lian-xi.html" rel="alternate"></link><published>2016-12-12T12:00:00+08:00</published><updated>2016-12-12T12:00:00+08:00</updated><author><name>s40523243</name></author><id>tag:,2016-12-12:./w14-brython-lian-xi.html</id><summary type="html">&lt;p&gt;第十四週開始練習&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;div id="ex1"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
container = doc['ex1']

container &lt;= "W14 練習"
&lt;/script&gt;

&lt;div id="ex2"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['ex2']
mystring = input("要印出甚麼字串?")
mynum = input("要印幾次?")

for i in range(int(mynum)):
    #container &lt;= "W14 練習-2" + html.BR()
    container &lt;= mystring + html.BR()
&lt;/script&gt;</summary><category term="Brython"></category></entry><entry><title>W10 Brython 繪圖範例</title><link href="./w10-brython-hui-tu-fan-li.html" rel="alternate"></link><published>2016-11-14T12:00:00+08:00</published><updated>2016-11-14T12:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2016-11-14:./w10-brython-hui-tu-fan-li.html</id><summary type="html">&lt;p&gt;Brython繪圖&lt;/p&gt;


&lt;p&gt;繪圖流程,導入程式庫,啟動,然後引用各種模組開始繪圖&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫兩條直線 --&gt;

&lt;canvas id="japanflag1" width="600" height="250"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["japanflag1"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 將畫筆移動到 (100, 100) 座標點
ctx.moveTo(100, 100)
# 然後畫直線到 (150, 200) 座標點
ctx.lineTo(150, 200)
ctx.moveTo (150,100)
ctx.lineTo(100,200)
# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
ctx.moveTo (150,100)
ctx.lineTo(100,200)
# 實際執行畫線
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫方格線 --&gt;

&lt;canvas id="japanflag3" width="600" height="300"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(99, 100+i*30)
    ctx.lineTo(201, 100+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(100+i*20, 100)
    ctx.lineTo(100+i*20, 220)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A 40523243
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "30px Arial"
ctx.fillText("A Man", 100, 70)
ctx.arc(150, 150, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 45, 55)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(120, 200, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 45, 85)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 4
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(160, 115, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("4", 45, 115)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(170, 140, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(120, 170, 7, 0, 2*math.pi, False)
ctx.moveTo(44, 164)
ctx.lineTo(56, 176)
ctx.moveTo(56, 164)
ctx.lineTo(44, 176)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# 以下將 canvas 畫布內容轉為 img tag, 並且顯示在 container 物件
img = canvas.toDataURL("image/png")
# 利用 re.sub, 將原本要直接開圖檔的 data:image 標頭, 改為 data:application/octet-stream, 可直接下載存檔
# 使用 re 模組之前必須先 import re
img = re.sub("^data:image\/[^;]", "data:application/octet-stream", img)
# 宣告 anchor markup attribute download, 可以指定下載儲存檔名
container &lt;= html.A("save image", href=img, download="guitar_chord.png")
&lt;/script&gt;</summary><category term="Brython"></category></entry><entry><title>W11 Brython 繪圖範例</title><link href="./w11-brython-hui-tu-fan-li.html" rel="alternate"></link><published>2016-11-14T12:00:00+08:00</published><updated>2016-11-14T12:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2016-11-14:./w11-brython-hui-tu-fan-li.html</id><summary type="html">&lt;p&gt;Brython繪圖&lt;/p&gt;


&lt;p&gt;繪圖流程,導入程式庫,啟動,然後引用各種模組開始繪圖&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(99, 100+i*30)
    ctx.lineTo(201, 100+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(100+i*20, 100)
    ctx.lineTo(100+i*20, 220)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()
ctx.closePath()

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()
    ctx.closePath()

background(300, 300, 10, 10, 5, 4, ctx)
background(100, 300, 10, 10, 5, 4, ctx)
background(300, 100, 10, 10, 6, 12, ctx)
background(200, 500, 10, 10, 5, 4, ctx)
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;canvas id="japanflag3" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(99, 100+i*30)
    ctx.lineTo(201, 100+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(100+i*20, 100)
    ctx.lineTo(100+i*20, 220)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "15px Arial"
ctx.fillText("A Major", 105, 70)
ctx.arc(140, 145, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "15px Arial"
ctx.fillText("1", 135, 150)
ctx.fill()
ctx.stroke()
ctx.closePath()


# 2
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(160, 145, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 155, 150)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(180, 145, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 175, 150)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(120, 85, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(200, 85, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(50, 85, 7, 0, 2*math.pi, False)
ctx.moveTo(94, 79)
ctx.lineTo(106, 91)
ctx.moveTo(106, 79)
ctx.lineTo(94, 91)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

&lt;/script&gt;

&lt;canvas id="japanflag3" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(229, 100+i*30)
    ctx.lineTo(331, 100+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(230+i*20, 100)
    ctx.lineTo(230+i*20, 220)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "15px Arial"
ctx.fillText("C Major", 235, 70)
ctx.arc(310, 115, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "15px Arial"
ctx.fillText("1", 305, 120)
ctx.fill()
ctx.stroke()
ctx.closePath()


# 2
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(270, 145, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 265, 150)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(250, 175, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 245, 180)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(330, 85, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(290, 85, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(50, 85, 7, 0, 2*math.pi, False)
ctx.moveTo(234, 79)
ctx.lineTo(226, 91)
ctx.moveTo(226, 79)
ctx.lineTo(234, 91)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# 以下將 canvas 畫布內容轉為 img tag, 並且顯示在 container 物件
img = canvas.toDataURL("image/png")
# 利用 re.sub, 將原本要直接開圖檔的 data:image 標頭, 改為 data:application/octet-stream, 可直接下載存檔
# 使用 re 模組之前必須先 import re
img = re.sub("^data:image\/[^;]", "data:application/octet-stream", img)
# 宣告 anchor markup attribute download, 可以指定下載儲存檔名
container &lt;= html.A("save image", href=img, download="guitar_chord.png")
&lt;/script&gt;

&lt;canvas id="japanflag3" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(359, 100+i*30)
    ctx.lineTo(461, 100+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(360+i*20, 100)
    ctx.lineTo(360+i*20, 220)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "15px Arial"
ctx.fillText("G Major", 365, 70)
ctx.arc(380, 145, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 375, 150)
ctx.fill()
ctx.stroke()
ctx.closePath()


# 2
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(360, 175, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 355, 180)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(440, 175, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 435, 180)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(460, 175, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("4", 455, 180)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(400, 85, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(420, 85, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

&lt;/script&gt;

&lt;canvas id="japanflag3" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(99, 290+i*30)
    ctx.lineTo(201, 290+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(100+i*20, 290)
    ctx.lineTo(100+i*20, 410)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "15px Arial"
ctx.fillText("D Major", 105, 260)
ctx.arc(160, 335, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 155, 340)
ctx.fill()
ctx.stroke()
ctx.closePath()


# 2
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(180, 365, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 175, 370)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(200, 335, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 195, 340)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(140, 275, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(50, 275, 7, 0, 2*math.pi, False)
ctx.moveTo(94, 269)
ctx.lineTo(106, 281)
ctx.moveTo(106, 269)
ctx.lineTo(94, 281)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(70, 275, 7, 0, 2*math.pi, False)
ctx.moveTo(114, 269)
ctx.lineTo(126, 281)
ctx.moveTo(126, 269)
ctx.lineTo(114, 281)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;canvas id="japanflag3" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(229, 290+i*30)
    ctx.lineTo(331, 290+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(230+i*20, 290)
    ctx.lineTo(230+i*20, 410)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "15px Arial"
ctx.fillText("E Major", 245, 260)
ctx.arc(290, 305, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 285, 310)
ctx.fill()
ctx.stroke()
ctx.closePath()


# 2
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(250, 335, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 245, 340)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(270, 335, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 265, 340)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(330, 275, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(310, 275, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(50, 85, 7, 0, 2*math.pi, False)
ctx.moveTo(224, 269)
ctx.lineTo(236, 281)
ctx.moveTo(236, 269)
ctx.lineTo(224, 281)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

&lt;/script&gt;

&lt;canvas id="japanflag3" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(359, 290+i*30)
    ctx.lineTo(461, 290+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(360+i*20, 290)
    ctx.lineTo(360+i*20, 410)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "15px Arial"
ctx.fillText("Cmaj7", 375, 260)
ctx.arc(400, 335, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 395, 340)
ctx.fill()
ctx.stroke()
ctx.closePath()


# 2
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(380, 365, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 375, 370)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(420, 275, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(460, 275, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(440, 275, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(50, 85, 7, 0, 2*math.pi, False)
ctx.moveTo(354, 269)
ctx.lineTo(366, 281)
ctx.moveTo(366, 269)
ctx.lineTo(354, 281)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

&lt;/script&gt;

&lt;pre class="brush:python"&gt;
&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(99, 100+i*30)
    ctx.lineTo(201, 100+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(100+i*20, 100)
    ctx.lineTo(100+i*20, 220)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()
ctx.closePath()

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()
    ctx.closePath()

background(300, 300, 10, 10, 5, 4, ctx)
background(100, 300, 10, 10, 5, 4, ctx)
background(300, 100, 10, 10, 6, 12, ctx)
background(200, 500, 10, 10, 5, 4, ctx)
&lt;/script&gt;
&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;canvas id="japanflag3" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(99, 100+i*30)
    ctx.lineTo(201, 100+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(100+i*20, 100)
    ctx.lineTo(100+i*20, 220)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "15px Arial"
ctx.fillText("A Major", 105, 70)
ctx.arc(140, 145, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "15px Arial"
ctx.fillText("1", 135, 150)
ctx.fill()
ctx.stroke()
ctx.closePath()


# 2
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(160, 145, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 155, 150)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(180, 145, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 175, 150)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(120, 85, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(200, 85, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(50, 85, 7, 0, 2*math.pi, False)
ctx.moveTo(94, 79)
ctx.lineTo(106, 91)
ctx.moveTo(106, 79)
ctx.lineTo(94, 91)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

&lt;/script&gt;

&lt;canvas id="japanflag3" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(229, 100+i*30)
    ctx.lineTo(331, 100+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(230+i*20, 100)
    ctx.lineTo(230+i*20, 220)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "15px Arial"
ctx.fillText("C Major", 235, 70)
ctx.arc(310, 115, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "15px Arial"
ctx.fillText("1", 305, 120)
ctx.fill()
ctx.stroke()
ctx.closePath()


# 2
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(270, 145, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 265, 150)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(250, 175, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 245, 180)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(330, 85, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(290, 85, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(50, 85, 7, 0, 2*math.pi, False)
ctx.moveTo(234, 79)
ctx.lineTo(226, 91)
ctx.moveTo(226, 79)
ctx.lineTo(234, 91)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# 以下將 canvas 畫布內容轉為 img tag, 並且顯示在 container 物件
img = canvas.toDataURL("image/png")
# 利用 re.sub, 將原本要直接開圖檔的 data:image 標頭, 改為 data:application/octet-stream, 可直接下載存檔
# 使用 re 模組之前必須先 import re
img = re.sub("^data:image\/[^;]", "data:application/octet-stream", img)
# 宣告 anchor markup attribute download, 可以指定下載儲存檔名
container &lt;= html.A("save image", href=img, download="guitar_chord.png")
&lt;/script&gt;

&lt;canvas id="japanflag3" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(359, 100+i*30)
    ctx.lineTo(461, 100+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(360+i*20, 100)
    ctx.lineTo(360+i*20, 220)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "15px Arial"
ctx.fillText("G Major", 365, 70)
ctx.arc(380, 145, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 375, 150)
ctx.fill()
ctx.stroke()
ctx.closePath()


# 2
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(360, 175, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 355, 180)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(440, 175, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 435, 180)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(460, 175, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("4", 455, 180)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(400, 85, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(420, 85, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

&lt;/script&gt;

&lt;canvas id="japanflag3" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(99, 290+i*30)
    ctx.lineTo(201, 290+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(100+i*20, 290)
    ctx.lineTo(100+i*20, 410)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "15px Arial"
ctx.fillText("D Major", 105, 260)
ctx.arc(160, 335, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 155, 340)
ctx.fill()
ctx.stroke()
ctx.closePath()


# 2
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(180, 365, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 175, 370)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(200, 335, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 195, 340)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(140, 275, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(50, 275, 7, 0, 2*math.pi, False)
ctx.moveTo(94, 269)
ctx.lineTo(106, 281)
ctx.moveTo(106, 269)
ctx.lineTo(94, 281)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(70, 275, 7, 0, 2*math.pi, False)
ctx.moveTo(114, 269)
ctx.lineTo(126, 281)
ctx.moveTo(126, 269)
ctx.lineTo(114, 281)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;canvas id="japanflag3" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(229, 290+i*30)
    ctx.lineTo(331, 290+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(230+i*20, 290)
    ctx.lineTo(230+i*20, 410)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "15px Arial"
ctx.fillText("E Major", 245, 260)
ctx.arc(290, 305, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 285, 310)
ctx.fill()
ctx.stroke()
ctx.closePath()


# 2
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(250, 335, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 245, 340)
ctx.fill()
ctx.stroke()
ctx.closePath()

# 3
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(270, 335, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("3", 265, 340)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(330, 275, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(310, 275, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(50, 85, 7, 0, 2*math.pi, False)
ctx.moveTo(224, 269)
ctx.lineTo(236, 281)
ctx.moveTo(236, 269)
ctx.lineTo(224, 281)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

&lt;/script&gt;

&lt;canvas id="japanflag3" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container3"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
import re
# 準備繪圖畫布
canvas = doc["japanflag3"]
container = doc["container3"]
ctx = canvas.getContext("2d")
# 以下可以利用 ctx 物件進行畫圖

# 水平線
for i in range(5):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    if i == 0:
        ctx.lineWidth = 7
    else:
        ctx.lineWidth = 1
    ctx.moveTo(359, 290+i*30)
    ctx.lineTo(461, 290+i*30)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 垂直線
for i in range(6):
    ctx.beginPath()
# 設定線的寬度為 1 個單位
    ctx.lineWidth = 1
    ctx.moveTo(360+i*20, 290)
    ctx.lineTo(360+i*20, 410)
    # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
    ctx.strokeStyle = "blue"
    ctx.stroke()
    ctx.closePath()

# 1 與 A7
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.font = "15px Arial"
ctx.fillText("Cmaj7", 375, 260)
ctx.arc(400, 335, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("1", 395, 340)
ctx.fill()
ctx.stroke()
ctx.closePath()


# 2
ctx.beginPath()
ctx.fillStyle = 'black'
ctx.strokeStyle = "black"
ctx.arc(380, 365, 9, 0, 2*math.pi, False)
ctx.fill()
ctx.stroke()
ctx.closePath()

ctx.beginPath()
ctx.fillStyle = 'white'
ctx.font = "16px Arial"
ctx.fillText("2", 375, 370)
ctx.fill()
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(420, 275, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(460, 275, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# o
ctx.beginPath()
ctx.arc(440, 275, 7, 0, 2*math.pi, False)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

# x
ctx.beginPath()
#ctx.arc(50, 85, 7, 0, 2*math.pi, False)
ctx.moveTo(354, 269)
ctx.lineTo(366, 281)
ctx.moveTo(366, 269)
ctx.lineTo(354, 281)
ctx.lineWidth =3
ctx.strokeStyle = "black"
ctx.stroke()
ctx.closePath()

&lt;/script&gt;</summary><category term="Brython"></category></entry></feed>